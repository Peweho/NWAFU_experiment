/* Generated By:JJTree&JavaCC: Do not edit this line. GrammerConstants.java */
package jjtFile;


/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface GrammerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 7;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 8;
  /** RegularExpression Id. */
  int HEX_LITERAL = 9;
  /** RegularExpression Id. */
  int OCTAL_LITERAL = 10;
  /** RegularExpression Id. */
  int KEYWORD = 11;
  /** RegularExpression Id. */
  int FLOAT = 12;
  /** RegularExpression Id. */
  int DOUBLE = 13;
  /** RegularExpression Id. */
  int IF = 14;
  /** RegularExpression Id. */
  int ELSE = 15;
  /** RegularExpression Id. */
  int INT = 16;
  /** RegularExpression Id. */
  int RETURN = 17;
  /** RegularExpression Id. */
  int DO = 18;
  /** RegularExpression Id. */
  int WHILE = 19;
  /** RegularExpression Id. */
  int STRUCT = 20;
  /** RegularExpression Id. */
  int VOID = 21;
  /** RegularExpression Id. */
  int IDENTIFIER = 22;
  /** RegularExpression Id. */
  int LETTER = 23;
  /** RegularExpression Id. */
  int DIGIT = 24;
  /** RegularExpression Id. */
  int ADD = 25;
  /** RegularExpression Id. */
  int MUL = 26;
  /** RegularExpression Id. */
  int SUB = 27;
  /** RegularExpression Id. */
  int DIV = 28;
  /** RegularExpression Id. */
  int ASSIGNMENT = 29;
  /** RegularExpression Id. */
  int RELATION_OPERATORS = 30;
  /** RegularExpression Id. */
  int GREAT = 31;
  /** RegularExpression Id. */
  int LESS = 32;
  /** RegularExpression Id. */
  int EQUAL = 33;
  /** RegularExpression Id. */
  int COMMA = 34;
  /** RegularExpression Id. */
  int SEMI = 35;
  /** RegularExpression Id. */
  int SLBRACKET = 36;
  /** RegularExpression Id. */
  int SRBRACKET = 37;
  /** RegularExpression Id. */
  int MLBRACKET = 38;
  /** RegularExpression Id. */
  int MRBRACKET = 39;
  /** RegularExpression Id. */
  int LLBRACKET = 40;
  /** RegularExpression Id. */
  int LRBRACKET = 41;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<KEYWORD>",
    "\"float\"",
    "\"double\"",
    "\"if\"",
    "\"else\"",
    "\"int\"",
    "\"return\"",
    "\"do\"",
    "\"while\"",
    "\"struct\"",
    "\"void\"",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\"+\"",
    "\"*\"",
    "\"-\"",
    "\"/\"",
    "\"=\"",
    "<RELATION_OPERATORS>",
    "\">\"",
    "\"<\"",
    "\"==\"",
    "\",\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"%\"",
  };

}
